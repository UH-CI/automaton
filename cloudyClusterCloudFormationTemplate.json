{
  "Description": "Cloud Formation Template to launch a CloudyCluster Control Instance complete with IAM Role, Instance Profile, and Security Group. --AWSMP::73bcd10f-81b6-4fbb-b113-6e5e72ec1f89::7de8d4f3-0956-4c1f-a367-d052be3cfac7",

  "Parameters": {

    "KeyName": {
      "Description": "Select an existing EC2 KeyPair to enable SSH and initial web access to your CloudyCluster instance.",
      "Type": "AWS::EC2::KeyPair::KeyName"
    },

    "vpc": {
      "Description": "Select an exisiting VPC ID that contains a public subnet that you want to launch CloudyCluster in (i.e. vpc-xxxxxxxx).",
      "Type": "AWS::EC2::VPC::Id"
    },

    "PublicSubnet": {
      "Description": "Select an existing public subnet ID where CloudyCluster will launch.",
      "Type": "AWS::EC2::Subnet::Id"
    },
    "InstanceType": {
      "Description": "Select the CloudyCluster Control Instance type you will launch.",
      "Type": "String",
	  "Default" : "t3.small",
      "AllowedValues": [
        "c3.2xlarge",
        "c3.4xlarge",
        "c3.8xlarge",
        "c3.large",
        "c3.xlarge",
        "c4.2xlarge",
        "c4.4xlarge",
        "c4.8xlarge",
        "c4.large",
        "c4.xlarge",
        "c5.18xlarge",
        "c5.2xlarge",
        "c5.4xlarge",
        "c5.9xlarge",
        "c5.large",
        "c5.xlarge",
        "cc2.8xlarge",
        "cr1.8xlarge",
        "cg1.4xlarge",
        "d2.2xlarge",
        "d2.4xlarge",
        "d2.8xlarge",
        "d2.xlarge",
        "g2.2xlarge",
        "g2.8xlarge",
        "g3.16xlarge",
        "g3.4xlarge",
        "g3.8xlarge",
        "h1.16xlarge",
        "h1.2xlarge",
        "h1.4xlarge",
        "h1.8xlarge",
        "hs1.8xlarge",
        "i2.2xlarge",
        "i2.4xlarge",
        "i2.8xlarge",
        "i2.xlarge",
        "i3.16xlarge",
        "i3.2xlarge",
        "i3.4xlarge",
        "i3.8xlarge",
        "i3.large",
        "i3.xlarge",
        "m3.2xlarge",
        "m3.large",
        "m3.medium",
        "m3.xlarge",
        "m4.10xlarge",
        "m4.16xlarge",
        "m4.2xlarge",
        "m4.4xlarge",
        "m4.large",
        "m4.xlarge",
        "m5.large",
        "m5.xlarge",
        "m5.2xlarge",
        "m5.4xlarge",
        "m5.12xlarge",
        "m5.24xlarge",
        "p2.16xlarge",
        "p2.8xlarge",
        "p2.xlarge",
        "p3.16xlarge",
        "p3.2xlarge",
        "p3.8xlarge",
        "r3.2xlarge",
        "r3.4xlarge",
        "r3.8xlarge",
        "r3.large",
        "r3.xlarge",
        "r4.16xlarge",
        "r4.2xlarge",
        "r4.4xlarge",
        "r4.8xlarge",
        "r4.large",
        "r4.xlarge",
        "t3.2xlarge",
        "t3.large",
        "t3.medium",
        "t3.micro",
        "t3.small",
        "t3.xlarge",
        "x1.16xlarge",
        "x1.32xlarge",
        "x1e.xlarge",
        "x1e.32xlarge"
      ]
    },
  "NetworkCIDR": {
      "Description": "Enter a network CIDR representing an address range that is permitted to access the launched instance (i.e., 176.32.2.0/24). You may enter 0.0.0.0/0 if you don't know your address range. NOTE: This will make the instance accessible to Internet but will allow you to use CloudyCluster. You can edit this later in the AWS Console.",
      "Type": "String",
      "AllowedPattern": "[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}/[0-9]{1,2}",
      "ConstraintDescription": "Please specify a valid source IP range. Eg: 176.32.2.0/24"
  }
  },
  "Mappings": {
    "AWSInstanceType2Arch": {
      "c3.2xlarge": {
        "Arch": "64"
      },
      "c3.4xlarge": {
        "Arch": "64"
      },
      "c3.8xlarge": {
        "Arch": "64"
      },
      "c3.large": {
        "Arch": "64"
      },
      "c3.xlarge": {
        "Arch": "64"
      },
      "c4.2xlarge": {
        "Arch": "64"
      },
      "c4.4xlarge": {
        "Arch": "64"
      },
      "c4.8xlarge": {
        "Arch": "64"
      },
      "c4.large": {
        "Arch": "64"
      },
      "c4.xlarge": {
        "Arch": "64"
      },
      "c5.18xlarge": {
        "Arch": "64"
      },
      "c5.2xlarge": {
        "Arch": "64"
      },
      "c5.4xlarge": {
        "Arch": "64"
      },
      "c5.9xlarge": {
        "Arch": "64"
      },
      "c5.large": {
        "Arch": "64"
      },
      "c5.xlarge": {
        "Arch": "64"
      },
      "cc2.8xlarge": {
        "Arch": "64"
      },
      "cr1.8xlarge": {
        "Arch": "64"
      },
      "cg1.4xlarge": {
        "Arch": "64"
      },
      "d2.2xlarge": {
        "Arch": "64"
      },
      "d2.4xlarge": {
        "Arch": "64"
      },
      "d2.8xlarge": {
        "Arch": "64"
      },
      "d2.xlarge": {
        "Arch": "64"
      },
      "g2.2xlarge": {
        "Arch": "64"
      },
      "g2.8xlarge": {
        "Arch": "64"
      },
      "g3.16xlarge": {
        "Arch": "64"
      },
      "g3.4xlarge": {
        "Arch": "64"
      },
      "g3.8xlarge": {
        "Arch": "64"
      },
      "h1.16xlarge": {
        "Arch": "64"
      },
      "h1.2xlarge": {
        "Arch": "64"
      },
      "h1.4xlarge": {
        "Arch": "64"
      },
      "h1.8xlarge": {
        "Arch": "64"
      },
      "hs1.8xlarge": {
        "Arch": "64"
      },
      "i2.2xlarge": {
        "Arch": "64"
      },
      "i2.4xlarge": {
        "Arch": "64"
      },
      "i2.8xlarge": {
        "Arch": "64"
      },
      "i2.xlarge": {
        "Arch": "64"
      },
      "i3.16xlarge": {
        "Arch": "64"
      },
      "i3.2xlarge": {
        "Arch": "64"
      },
      "i3.4xlarge": {
        "Arch": "64"
      },
      "i3.8xlarge": {
        "Arch": "64"
      },
      "i3.large": {
        "Arch": "64"
      },
      "i3.xlarge": {
        "Arch": "64"
      },
      "m3.2xlarge": {
        "Arch": "64"
      },
      "m3.large": {
        "Arch": "64"
      },
      "m3.medium": {
        "Arch": "64"
      },
      "m3.xlarge": {
        "Arch": "64"
      },
      "m4.10xlarge": {
        "Arch": "64"
      },
      "m4.16xlarge": {
        "Arch": "64"
      },
      "m4.2xlarge": {
        "Arch": "64"
      },
      "m4.4xlarge": {
        "Arch": "64"
      },
      "m4.large": {
        "Arch": "64"
      },
      "m4.xlarge": {
        "Arch": "64"
      },
      "m5.large": {
        "Arch": "64"
      },
      "m5.xlarge": {
        "Arch": "64"
      },
      "m5.2xlarge": {
        "Arch": "64"
      },
      "m5.4xlarge": {
        "Arch": "64"
      },
      "m5.12xlarge": {
        "Arch": "64"
      },
      "m5.24xlarge": {
        "Arch": "64"
      },
      "p2.16xlarge": {
        "Arch": "64"
      },
      "p2.8xlarge": {
        "Arch": "64"
      },
      "p2.xlarge": {
        "Arch": "64"
      },
      "p3.16xlarge": {
        "Arch": "64"
      },
      "p3.2xlarge": {
        "Arch": "64"
      },
      "p3.8xlarge": {
        "Arch": "64"
      },
      "r3.2xlarge": {
        "Arch": "64"
      },
      "r3.4xlarge": {
        "Arch": "64"
      },
      "r3.8xlarge": {
        "Arch": "64"
      },
      "r3.large": {
        "Arch": "64"
      },
      "r3.xlarge": {
        "Arch": "64"
      },
      "r4.16xlarge": {
        "Arch": "64"
      },
      "r4.2xlarge": {
        "Arch": "64"
      },
      "r4.4xlarge": {
        "Arch": "64"
      },
      "r4.8xlarge": {
        "Arch": "64"
      },
      "r4.large": {
        "Arch": "64"
      },
      "r4.xlarge": {
        "Arch": "64"
      },
      "t3.2xlarge": {
        "Arch": "64"
      },
      "t3.large": {
        "Arch": "64"
      },
      "t3.medium": {
        "Arch": "64"
      },
      "t3.micro": {
        "Arch": "64"
      },
      "t3.small": {
        "Arch": "64"
      },
      "t3.xlarge": {
        "Arch": "64"
      },
      "x1.16xlarge": {
        "Arch": "64"
      },
      "x1.32xlarge": {
        "Arch": "64"
      },
      "x1e.xlarge": {
        "Arch": "64"
      },
      "x1e.32xlarge": {
        "Arch": "64"
      }
    },

    "AWSRegionArch2AMI": {
      "us-east-1": {
        "64": "ami-07510a7d"
      },
      "us-east-2": {
        "64": "ami-0419147eabdd024f3"
      },
      "us-west-1": {
        "64": "ami-0cd23dacc407633e5"
      },
      "us-west-2": {
        "64": "ami-014370c69445f1f76"
      },
      "us-gov-1": {
        "64": "ami-dc6ae3bd"
      },
      "ca-central-1": {
        "64": "ami-47931623"
      },
      "eu-central-1": {
        "64": "ami-2839ab47"
      },
      "eu-west-1": {
        "64": "ami-af980ad6"
      },
      "eu-west-2": {
        "64": "ami-c65249a2"
      },
      "ap-southeast-1": {
        "64": "ami-b7e192cb"
      },
      "ap-southeast-2": {
        "64": "ami-452ed327"
      },
      "ap-south-1": {
        "64": "ami-1b267174"
      },
      "ap-northeast-1": {
        "64": "ami-8d2ab2eb"
      },
      "ap-northeast-2": {
        "64": "ami-fe63c390"
      },
      "sa-east-1": {
        "64": "ami-6a6f2d06"
      }
    }
  },

  "Resources": {
    "CloudyClusterControlInstanceRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [{
            "Effect": "Allow",
            "Principal": {
              "Service": [
                "ec2.amazonaws.com"
              ]
            },
            "Action": [
              "sts:AssumeRole"
            ]
          }]
        },
        "Path": "/"
      }
    },
    "CloudyClusterControlInstancePolicy": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "CloudyClusterControlInstancePolicy",
        "PolicyDocument": {
          "Statement": [{
            "Sid": "Stmt1442276049188",
            "Action": [
              "iam:AddRoleToInstanceProfile",
              "iam:AttachRolePolicy",
              "iam:CreateInstanceProfile",
              "iam:CreatePolicy",
              "iam:CreateRole",
              "iam:DeleteInstanceProfile",
              "iam:DeletePolicy",
              "iam:DeleteRole",
              "iam:DeleteRolePolicy",
              "iam:DetachRolePolicy",
              "iam:GetInstanceProfile",
              "iam:GetPolicy",
              "iam:GetRole",
              "iam:GetRolePolicy",
              "iam:GetSSHPublicKey",
              "iam:ListAttachedGroupPolicies",
              "iam:ListAttachedRolePolicies",
              "iam:ListInstanceProfiles",
              "iam:ListInstanceProfilesForRole",
              "iam:ListRolePolicies",
              "iam:ListPolicies",
              "iam:ListRoles",
              "iam:PassRole",
              "iam:PutRolePolicy",
              "iam:RemoveRoleFromInstanceProfile"
            ],
            "Effect": "Allow",
            "Resource": "*"
          }, {
            "Sid": "Stmt1442276116074",
            "Action": [
              "dynamodb:BatchGetItem",
              "dynamodb:BatchWriteItem",
              "dynamodb:CreateTable",
              "dynamodb:DeleteItem",
              "dynamodb:DeleteTable",
              "dynamodb:DescribeTable",
              "dynamodb:GetItem",
              "dynamodb:ListTables",
              "dynamodb:PutItem",
              "dynamodb:Query",
              "dynamodb:Scan",
              "dynamodb:UpdateItem",
              "dynamodb:UpdateTable"
            ],
            "Effect": "Allow",
            "Resource": "*"
          }, {
            "Sid": "Stmt1442276285214",
            "Action": [
              "ec2:AcceptVpcPeeringConnection",
              "ec2:AssociateRouteTable",
              "ec2:AttachClassicLinkVpc",
              "ec2:AttachInternetGateway",
              "ec2:AttachNetworkInterface",
              "ec2:AttachVolume",
              "ec2:AuthorizeSecurityGroupEgress",
              "ec2:AuthorizeSecurityGroupIngress",
              "ec2:CreateInternetGateway",
              "ec2:CreateNetworkAcl",
              "ec2:CreateNetworkAclEntry",
              "ec2:CreateNetworkInterface",
              "ec2:CreatePlacementGroup",
              "ec2:CreateRoute",
              "ec2:CreateRouteTable",
              "ec2:CreateSecurityGroup",
              "ec2:CreateSubnet",
              "ec2:CreateTags",
              "ec2:CreateVolume",
              "ec2:CreateVpc",
              "ec2:CreateVpcPeeringConnection",
              "ec2:DeleteInternetGateway",
              "ec2:DeleteNetworkAcl",
              "ec2:DeleteNetworkAclEntry",
              "ec2:DeleteNetworkInterface",
              "ec2:DeletePlacementGroup",
              "ec2:DeleteRoute",
              "ec2:DeleteRouteTable",
              "ec2:DeleteSecurityGroup",
              "ec2:DeleteSubnet",
              "ec2:DeleteTags",
              "ec2:DeleteVolume",
              "ec2:DeleteVpc",
              "ec2:DeleteVpcPeeringConnection",
              "ec2:DescribeAvailabilityZones",
              "ec2:DescribeClassicLinkInstances",
              "ec2:DescribeImages",
              "ec2:DescribeInstanceAttribute",
              "ec2:DescribeInstanceStatus",
              "ec2:DescribeInstances",
              "ec2:DescribeInternetGateways",
              "ec2:DescribeKeyPairs",
              "ec2:DescribeNetworkAcls",
              "ec2:DescribeNetworkInterfaceAttribute",
              "ec2:DescribeNetworkInterfaces",
              "ec2:DescribePlacementGroups",
              "ec2:DescribeRegions",
              "ec2:DescribeReservedInstances",
              "ec2:DescribeReservedInstancesListings",
              "ec2:DescribeReservedInstancesModifications",
              "ec2:DescribeReservedInstancesOfferings",
              "ec2:DescribeRouteTables",
              "ec2:DescribeSecurityGroups",
              "ec2:DescribeSpotPriceHistory",
              "ec2:DescribeSubnets",
              "ec2:DescribeTags",
              "ec2:DescribeVolumeAttribute",
              "ec2:DescribeVolumeStatus",
              "ec2:DescribeVolumes",
              "ec2:DescribeVpcAttribute",
              "ec2:DescribeVpcClassicLink",
              "ec2:DescribeVpcPeeringConnections",
              "ec2:DescribeVpcs",
              "ec2:DetachClassicLinkVpc",
              "ec2:DetachInternetGateway",
              "ec2:DetachNetworkInterface",
              "ec2:DetachVolume",
              "ec2:DisassociateRouteTable",
              "ec2:EnableVolumeIO",
              "ec2:EnableVpcClassicLink",
              "ec2:ModifyImageAttribute",
              "ec2:ModifyInstanceAttribute",
              "ec2:ModifyNetworkInterfaceAttribute",
              "ec2:ModifySubnetAttribute",
              "ec2:ModifyVolumeAttribute",
              "ec2:ModifyVpcAttribute",
              "ec2:RebootInstances",
              "ec2:RejectVpcPeeringConnection",
              "ec2:ReplaceNetworkAclAssociation",
              "ec2:ReplaceNetworkAclEntry",
              "ec2:ReplaceRoute",
              "ec2:ReplaceRouteTableAssociation",
              "ec2:ReportInstanceStatus",
              "ec2:RequestSpotInstances",
              "ec2:ResetImageAttribute",
              "ec2:ResetInstanceAttribute",
              "ec2:ResetNetworkInterfaceAttribute",
              "ec2:RevokeSecurityGroupEgress",
              "ec2:RevokeSecurityGroupIngress",
              "ec2:RunInstances",
              "ec2:StartInstances",
              "ec2:StopInstances",
              "ec2:TerminateInstances",
              "ec2:RevokeSecurityGroupEgress",
              "ec2:RevokeSecurityGroupIngress",
              "ec2:CancelSpotFleetRequests",
              "ec2:CancelSpotInstanceRequests",
              "ec2:DescribeSpotFleetInstances",
              "ec2:DescribeSpotFleetRequestHistory",
              "ec2:DescribeSpotFleetRequests",
              "ec2:DescribeSpotInstanceRequests",
              "ec2:DescribeSpotPriceHistory",
              "ec2:ModifySpotFleetRequest",
              "ec2:RequestSpotFleet",
              "ec2:CreateVpcEndpoint",
              "ec2:DeleteVpcEndpoints",
              "ec2:DescribePrefixLists",
              "ec2:DescribeVpcEndpointServices",
              "ec2:DescribeVpcEndpoints"
            ],
            "Effect": "Allow",
            "Resource": "*"
          }, {
            "Sid": "Stmt1442276374455",
            "Action": [
              "elasticfilesystem:CreateFileSystem",
              "elasticfilesystem:CreateTags",
              "elasticfilesystem:DescribeTags",
              "elasticfilesystem:DeleteTags",
              "elasticfilesystem:CreateMountTarget",
              "elasticfilesystem:ModifyMountTargetSecurityGroups",
              "elasticfilesystem:DescribeMountTargetSecurityGroups",
              "elasticfilesystem:DescribeFileSystems",
              "elasticfilesystem:DescribeMountTargets",
              "elasticfilesystem:DeleteMountTarget",
              "elasticfilesystem:DeleteFileSystem"
            ],
            "Effect": "Allow",
            "Resource": "*"
          }, {
            "Sid": "Stmt1442276489115",
            "Action": [
              "s3:CreateBucket"
            ],
            "Effect": "Allow",
            "Resource": "*"
          }, {
            "Sid": "Stmt1442276489116",
            "Action": [
              "s3:DeleteBucket",
              "s3:GetBucketAcl",
              "s3:PutObjectAcl",
              "s3:PutBucketAcl",
              "s3:PutBucketPolicy",
              "s3:ListBucket"
            ],
            "Effect": "Allow",
            "Resource": "arn:aws:s3:::cc*"
          }, {
            "Sid": "Stmt1442276544404",
            "Action": [
              "autoscaling:AttachInstances",
              "autoscaling:CreateAutoScalingGroup",
              "autoscaling:CreateLaunchConfiguration",
              "autoscaling:CreateOrUpdateTags",
              "autoscaling:DeleteAutoScalingGroup",
              "autoscaling:DeleteLaunchConfiguration",
              "autoscaling:DeletePolicy",
              "autoscaling:DeleteTags",
              "autoscaling:DescribeAccountLimits",
              "autoscaling:DescribeAutoScalingGroups",
              "autoscaling:DescribeAutoScalingInstances",
              "autoscaling:DescribeLaunchConfigurations",
              "autoscaling:DescribePolicies",
              "autoscaling:DescribeTags",
              "autoscaling:DetachInstances",
              "autoscaling:ResumeProcesses",
              "autoscaling:SetDesiredCapacity",
              "autoscaling:SuspendProcesses",
              "autoscaling:TerminateInstanceInAutoScalingGroup",
              "autoscaling:UpdateAutoScalingGroup"
            ],
            "Effect": "Allow",
            "Resource": "*"
          }]
        },
        "Roles": [{
          "Ref": "CloudyClusterControlInstanceRole"
        }]
      }
    },
    "CloudyClusterControlInstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [{
          "Ref": "CloudyClusterControlInstanceRole"
        }]
      }
    },

    "CloudyClusterControlNodeSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Enable http, https, ssh access to the CloudyCluster ControlNode.",
        "VpcId": {
          "Ref": "vpc"
        },
        "SecurityGroupIngress": [{
          "IpProtocol": "tcp",
          "FromPort": "80",
          "ToPort": "80",
          "CidrIp": {"Ref": "NetworkCIDR"}
        }, {
          "IpProtocol": "tcp",
          "FromPort": "443",
          "ToPort": "443",
          "CidrIp": {"Ref": "NetworkCIDR"}
        }, {
          "IpProtocol": "tcp",
          "FromPort": "22",
          "ToPort": "22",
          "CidrIp": {"Ref": "NetworkCIDR"}
        }],
        "SecurityGroupEgress": [{
          "IpProtocol": "-1",
          "FromPort": "0",
          "ToPort": "65535",
          "CidrIp": "0.0.0.0/0"
        }]
      }
    },

    "CloudyClusterControlNode": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
	  	 "Tags" : [ {
			"Key" : "Name",
			"Value" : "CloudyCluster Control Instance"
		} ],
        "KeyName": {
          "Ref": "KeyName"
        },
        "ImageId": {
          "Fn::FindInMap": ["AWSRegionArch2AMI", {
            "Ref": "AWS::Region"
          }, {
            "Fn::FindInMap": ["AWSInstanceType2Arch", {
                "Ref": "InstanceType"
              },
              "Arch"
            ]
          }]
        },
        "NetworkInterfaces": [{
          "AssociatePublicIpAddress": "true",
          "DeviceIndex": "0",
          "GroupSet": [{
            "Ref": "CloudyClusterControlNodeSecurityGroup"
          }],
          "SubnetId": {
            "Ref": "PublicSubnet"
          }
        }],
        "InstanceType": {
          "Ref": "InstanceType"
        },
        "IamInstanceProfile": {
          "Ref": "CloudyClusterControlInstanceProfile"
        }
      }
    }
  },
  "Outputs" : {
  "InstanceID" : {
    "Description" : "The ID of the new CloudyCluster Control Instance:",
    "Value" : { "Ref" : "CloudyClusterControlNode" }
  },
  "InstanceIP" : {
    "Description": "The IP Address of the new CloudyCluster Control Instance:",
    "Value" : { "Fn::GetAtt" : [ "CloudyClusterControlNode", "PublicIp" ]}
  }
 }
}
